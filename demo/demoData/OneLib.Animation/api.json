[
    {
        "name":"使用说明",
        "apis":[
            {
                "name":"依赖项",
                "type":"Description",
                "returned":"String",
                "desc":"<ul><li>OneLib.EventEmitter</li></ul>"

            },
            {
                "name":"模块引入方式",
                "type":"Description",
                "returned":"String",
                "desc":"直接在页面上引入模块的js文件即可",
                "demoCodeRefs":[
                    {
                        "name":"",
                        "desc":"",
                        "type":"example",
                        "codeUrl":"../demoData/OneLib.Animation/useExample.html",
                        "cssUrls":[
                        ],
                        "javascriptUrls":[
                        ]
                    }
                ]
            }
        ]
    },
    {
        "name":"创建动画",
        "apis":[
            {
                "name":"createAnimation",
                "type":"Function",
                "returned":"Animation",
                "desc":"创建一个动画对象.\r\n该函数返回核心的<bold>动画对象</bold>，后续对动画的操作都要使用该对象的api",
                "params":[
                    {"name":"duration","type":"int","desc":"动画持续的时长(单位ms)。\r\n注意，如果设置此参数，则动画的progress会按照持续时长计算(也即如果cpu耗尽导致下一帧来的很晚，则progress可能会跳帧)"},
                    {"name":"delta","type":"Function(progress) => int","desc":"delta 函数，该函数接受progress(0～1的float,表示当前动画进度),返回一个计算后的progress(delta).\r\n这个delta会被传递给step函数做具体的动画操作.\r\n后面有专门章节介绍delta函数曲线和内置函数，请仔细查阅"},
                    {"name":"step","type":"Function(deltaProgress)","desc":"在每一个动画帧来到时，进行具体动画操作的函数.\r\n本框架并不对动画对象进行操作，只是提供动画的基本控制框架和常用动画函数，外部可以自己定义动画的行为"},
                    {"name":"delay","type":"int","desc":"(可选)\r\n动画2帧之间的间隔时间(单位ms).\r\n默认20ms"},
                    {"name":"totalFrame","type":"int","desc":"(可选)\r\n动画总共持续的帧数.\r\n如果没有设置duration，则必须设置此值。框架会按照“已绘制帧/总帧”的算法来得到progress.\r\n使用duration还是totalFrame来控制动画，取决于你希望得到一个时长可控(会跳帧)的动画，还是一个规规矩矩走完n帧的动画"}
                ],
                "demoCodeRefs":[
                    {
                        "name":"",
                        "desc":"",
                        "type":"example",
                        "codeUrl":"../demoData/OneLib.Animation/example.createAnimation_0.js",
                        "cssUrls":[
                        ],
                        "javascriptUrls":[
                        ]
                    },

                    {
                        "name":"除了上面的方式，参数也可以用option对象的方式传入，更加直观",
                        "desc":"",
                        "type":"example",
                        "codeUrl":"../demoData/OneLib.Animation/example.createAnimation_1.js",
                        "cssUrls":[
                        ],
                        "javascriptUrls":[
                        ]
                    }
                ]
            },
            {
                "name":"regDelta",
                "type":"Function",
                "returned":"this",
                "desc":"注册自己的delta函数.\r\n注册后的函数，可以通过builtInDelta方法来获取.",
                "params":[
                    {"name":"name","type":"String","desc":"delta函数的名字。比如ballJump之类的。\r\n注意，允许覆盖系统内置的名字，如linear"},
                    {"name":"fn","type":"Function(progress) => int","desc":"delta 函数，该函数接受progress(0～1的float,表示当前动画进度),返回一个计算后的progress(delta).\r\n这个delta会被传递给step函数做具体的动画操作.\r\n后面有专门章节介绍delta函数曲线和内置函数，请仔细查阅"}
                ],
                "demoCodeRefs":[
                    {
                        "name":"",
                        "desc":"",
                        "type":"example",
                        "codeUrl":"../demoData/OneLib.Animation/example.regDelta.js",
                        "cssUrls":[
                        ],
                        "javascriptUrls":[
                        ]
                    }
                ]
            },
            {
                "name":"(*)builtInDelta",
                "type":"Function",
                "desc":"获取内置的delta函数",
                "returned":"function(progress) => int ",
                "params":[
                    {"name":"deltaName","type":"String","desc":"内置的delta函数名,具体每种函数，以及取值曲线参见下面的图例"},
                    {"name":"paramArr","type":"Array","desc":"要传递给delta函数的额外的参数"},
                    {"name":"[mode]","type":"String","desc":"(可选)\r\n选择函数的模式：\r\n<ul><li>easeIn(default):表示渐入效果，也即delta(progress)=>delta中，delta与progress的取值关系为正向变化</li><li>easeOut:渐出效果，也即反向变化</li><li>easeInOut:本框架内置的渐入+渐出效果算法，在progress<0.5之前使用easeIn,之后使用easeOut</li></ul>"}
                ],
                "demoCodeRefs":[
                    {
                        "name":"builtInDelta语法示例",
                        "desc":"",
                        "type":"example",
                        "codeUrl":"../demoData/OneLib.Animation/example.builtInDelta.js",
                        "cssUrls":[
                        ],
                        "javascriptUrls":[
                        ]
                    },
                    {
                        "name":"下面是各个内置函数以及其easeOut,easeInOut模式的曲线图，你可以自己选取需要的函数",
                        "desc":"",
                        "type":"real",
                        "codeUrl":"../demoData/OneLib.Animation/example.builtInDeltaAll.html",
                        "cssUrls":[
                        ],
                        "javascriptUrls":[
                            "../../src/OneLib.EventEmitter.js",
                            "../../src/OneLib.Animation.js",
                            "../scripts/raphael-2.1.2-min.js",
                            "../scripts/raphael.wrap.CMD.js",
                            "../demoData/OneLib.Animation/example.builtInDeltaAll.js"
                        ]
                    }
                ]
            }
        ]
    },
    {
        "name":"动画控制",
        "apis":[
            {
                "name":"Animation.play",
                "type":"Function",
                "returned":"this",
                "desc":"播放该动画.\r\n为了方便，这个api设计为<span class='warn-notice'>一定会触发动画播放</span>，他会检查当前播放状态，如果是暂停，则resume,如果是停止，则start\r\n注意该方法是一个语法糖，所以调用后会根据实际情况抛出各种事件,比如start或resume",
                "params":[
                ],
                "demoCodeRefs":[

                ]
            },
            {
                "name":"Animation.pause",
                "type":"Function",
                "returned":"this",
                "desc":"暂停该动画.\r\n只有是播放状态的动画才会被暂停。否则该方法不做任何事情\r\n执行成功后，会抛出'pause'事件",
                "params":[
                ],
                "demoCodeRefs":[

                ]
            },
            {
                "name":"Animation.resume",
                "type":"Function",
                "returned":"this",
                "desc":"继续播放该动画.\r\n只有是暂停状态的动画才会被继续。否则该方法不做任何事情\r\n执行成功后，会抛出'resume'事件",
                "params":[
                ],
                "demoCodeRefs":[

                ]
            },
            {
                "name":"Animation.stop",
                "type":"Function",
                "returned":"this",
                "desc":"停止该动画.\r\n只有是播放或暂停状态的动画才会被停止。否则该方法不做任何事情\r\n执行成功后，会抛出'stop'事件",
                "params":[
                ],
                "demoCodeRefs":[

                ]
            },
            {
                "name":"Animation.restart",
                "type":"Function",
                "returned":"this",
                "desc":"重新播放该动画.\r\n该方法会<span class='warn-notice'>强行重新播放动画</span>\r\n执行成功后，会抛出'start'事件",
                "params":[
                ],
                "demoCodeRefs":[

                ]
            },
            {
                "name":"综合演示",
                "type":"Description",
                "desc":"",
                "params":[
                ],
                "demoCodeRefs":[
                    {
                        "name":"下面的例子演示了不同的api如何使用，以及效果",
                        "desc":"",
                        "type":"example",
                        "codeUrl":"../demoData/OneLib.Animation/example.controlAnimation.js",
                        "cssUrls":[
                        ],
                        "javascriptUrls":[
                        ]
                    },
                    {
                        "name":"",
                        "desc":"",
                        "type":"real",
                        "codeUrl":"../demoData/OneLib.Animation/example.controlAnimation.html",
                        "cssUrls":[
                        ],
                        "javascriptUrls":[
                            "../../src/OneLib.EventEmitter.js",
                            "../../src/OneLib.Animation.js",
                            "../demoData/OneLib.Animation/example.controlAnimation.js"
                        ]
                    }
                ]
            }
        ]
    },
    {
        "name":"动画事件订阅",
        "apis":[
            {
                "name":"Animation.on",
                "type":"Function",
                "returned":"SubscribeId",
                "desc":"订阅动画事件.\r\n <span class='warn-notice'>事件功能由EventEmitter模块提供，具体用法可以参考EventEmitter的API</span>",
                "params":[
                    {"name":"eventName","type":"String","desc":"要订阅的事件名称\r\n<ul><li>start:动画开始的时候触发</li><li>fpsChange:当fps发生变化的时候触发</li><li>pause:当动画暂停的时候触发</li><li>resume:当动画从暂停状态恢复的时候触发</li><li>finish:当动画自己播放到正常结束的时候触发</li><li>stop:动画结束就固定会触发(不论是否正常结束)。<span class='warn-notice'>如果动画是正常播放完成，该事件的触发顺序在finish之后</span></li></ul>"},
                    {"name":"handler","type":"Function(arg1,arg2,...)","desc":"事件处理函数"},
                    {"name":"[TTL]","type":"int","desc":"(可选)回调函数TTL,默认为无限大\r\n,如果设置了TTL,则该处理函数会被调用TTL次，之后就自动取消订阅"}
                ],
                "demoCodeRefs":[
                    {
                        "name":"下面的例子演示了如何订阅动画的各种事件",
                        "desc":"",
                        "type":"example",
                        "codeUrl":"../demoData/OneLib.Animation/example.animationEvents.js",
                        "cssUrls":[
                        ],
                        "javascriptUrls":[
                        ]
                    },
                    {
                        "name":"",
                        "desc":"",
                        "type":"real",
                        "codeUrl":"../demoData/OneLib.Animation/example.animationEvents.html",
                        "cssUrls":[
                        ],
                        "javascriptUrls":[
                            "../../src/OneLib.EventEmitter.js",
                            "../../src/OneLib.Animation.js",
                            "../demoData/OneLib.Animation/example.animationEvents.js"
                        ]
                    }
                ]
            }
        ]
    }
]